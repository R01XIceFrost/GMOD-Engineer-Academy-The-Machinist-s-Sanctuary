@name Contraption Saver
@inputs 
@outputs 
@persist [A1 A2 A3Saved Range SaveN I Stop_Ghost Load Index Frozen FF X Y Z FF2 Alpha Weld]:number 
@persist [PPOS PPOSS Color]:vector [Vec]:vector [SaveInfo LoadName Mat SaveName]:string [Prop]:entity [PropAng2]:angle
@persist [Tmp Save FileWriteF PropModel PropList]:array
@trigger  

interval(100)
runOnChat(1)
P = owner()
E = entity()
LS = P:lastSaid():lower()
LSS = LS:explode(" ")
Chat = chatClk(P)
if(first()){
    SaveName = "Prop"
    Range = 200
    hint("Type /help for help.",10)
    hint("Made by Devoided (XninjazXxx)",10)
    function hide(){
            hideChat(1) 
            printColor(vec(0,0,255),"[Hidden]",vec(random(0,255),random(0,255),random(0,255)),+P:name(),vec(255,255,255),": "+LS)
    }
}
#/help
if(Chat & LS == "/help"){ 
    hide()
    hint("Help printed in chat",10)
    print("first type /savename to name your file. Then type /save to save it.")
    print("type /load [filename] to load one of your contraptions.")
    print("type /radius [number] to change the radius of the save.")
    print("type /offset [forward/backwards left/right up/down] to add to the prop's positioning.")
    print("type /angle [pitch yaw roll] to add to the prop's angle.")
    print("type /freezeall to freeze all props being spawned.")
}
#/offset
if(Chat & LSS:string(1) == "/offset"){
    hide()
    X = LSS:string(2):toNumber()
    Y = LSS:string(3):toNumber()
    Z = LSS:string(4):toNumber()
    hint("Adding: "+X+","+Y+","+Z+" Vector to the position.",10)
}
#angle
if(Chat & LSS:string(1) == "/angle"){
    hide()
    A1 = LSS:string(2):toNumber()
    A2 = LSS:string(3):toNumber()
    A3 = LSS:string(4):toNumber()
    hint("Adding: "+A1+","+A2+","+A3+" Vector to the angle.",10)
}
#/radius
if(Chat & LSS:string(1) == "/radius"){
    hide()
    Range = LSS:string(2):toNumber()
    hint("Radius is now " + Range,10)
}
#/save
if(Chat & LSS:string(1) == "/save"){
    PPOS = P:pos()
    hide()
    SaveName = LSS:string(2)
    hint("File name is "+SaveName,10)
    hint("Saving props in a radius of " + Range,10)
    Saved = 1
    SaveN = 0
}
#/freezeall
if(Chat & LS == "/freezeall" & !FF2){
    hint("Now freezing all when spawning dupes.",10)
    hint("Type /freezeall again to disable freezing all props.",10)
    hide()
    FF = 1
    timer("FF2",100)
}
if(clk("FF2")){
    FF2 = 1
}
if(FF2 & Chat & LS == "/freezeall"){
    hint("Stopped freezing all props when spawed.",10)
    FF = 0
    FF2 = 0
}
#saving files
if(fileCanWrite()){
    if(Saved){
        while(SaveN<=Save:count()){
              findIncludeClass("prop_*")
              findInSphere(P:pos(),Range)
              Save = findToArray()
              SaveN++
              if(Save[SaveN,entity]:isFrozen()){
              Frozen = 1
              }else{
              Frozen = 0
          }
              SaveInfo = SaveInfo + Save[SaveN,entity]:model() + "|" + (Save[SaveN,entity]:pos()-PPOS):toString() + "|" + Save[SaveN,entity]:angles():toString() + "|"+Save[SaveN,entity]:getAlpha()+"|"+Save[SaveN,entity]:getMaterial()+"|"+Save[SaveN,entity]:getColor()+"|"+Frozen:toString()+"|"
              Save[SaveN,entity]:setAlpha(100)
              if(Stop_Ghost){
                  break
            } 
        }
        SaveInfo = SaveInfo:replace("[",""):replace("]","")
        SaveInfo = SaveInfo:left(SaveInfo:length()-1)
        if(changed(Saved)&Saved){
             hint("Saving Contraption "+SaveName+"!",10)
            timer("stopSave",1000)
        }
            fileWrite(">e2shared/" +SaveName+ ".txt" , SaveInfo)
    }
}elseif(Saved){
hint("cannot save files",10)
Saved = 0
}
if(clk("stopSave")){
    Saved = 0
    SaveN = 0
    SaveInfo = ""
    hint("Saved Contraption!",10)
    Stop_Ghost = 1
}
if(Stop_Ghost){
    for(I = 1,Save:count()){
    Save[I,entity]:setAlpha(255)
        if(clk("stop")){
            break
            Stop_Ghost = 0
            I = 0
            Save:clear()
            reset()
}
}
    timer("stop",100)
}
#/load
if(Chat & LSS:string(1) == "/load"){
    PropList:clear()
    PPOS = P:pos()
    hide()
    LoadName = LSS:string(2)
    if(fileCanLoad()){
        Load = 1
}elseif(!fileCanLoad()){
hint("Cannot Load Files",10)
}
}
if(Load){
    if(changed(Load)&Load){
        PPOS = P:pos()
        hint("Loading File: "+LoadName+".This Might Take A While...",10)
}
    fileLoad(">e2shared/" +LoadName+ ".txt")
    if(fileLoaded()){
        PropModel = fileRead():explode("|")
        timer("Load",100)
}
}
if(clk("Load")&fileLoaded()){
    timer("Load",100)
    Index++
    Weld++
    if(changed(Index==1)&Index==1){
        hint("File Loaded!",10)
        }
    Tmp = PropModel[Index+1,string]:explode(",")
    PropPos = vec(Tmp[1,string]:toNumber(),Tmp[2,string]:toNumber(),Tmp[3,string]:toNumber())
    Tmp = PropModel[Index+2,string]:explode(",")
    PropAng = ang(Tmp[1,string]:toNumber(),Tmp[2,string]:toNumber(),Tmp[3,string]:toNumber())
    Alpha = PropModel[Index+3,string]:toNumber()
    Mat = PropModel[Index+4,string]
    Tmp = PropModel[Index+5,string]:explode(",")
    Color = vec(Tmp[1,string]:toNumber(),Tmp[2,string]:toNumber(),Tmp[3,string]:toNumber())
    if(FF == 0){
    FrozenS = PropModel[Index+6,string]
}else{
FrozenS = "1"
}
    Prop = propSpawn(PropModel[Index,string],PropPos + PPOS + vec(X,Y,Z),PropAng + ang(A1,A2,A3),FrozenS:toNumber())
    PropList:pushEntity(Prop)
    Prop:setAlpha(Alpha)
    Prop:setColor(Color)
    Prop:setMaterial(Mat)
    if(Index>=PropModel:count()){ 
        PropModel:clear()
        Index = 0
        Load = 0
        stoptimer("Load")
        hint("Dupe finished spawning!",10)
    }
}
if(chatClk(P)&LS == "/clear"){
    hide()
    PropModel:clear()
    Index = 0
    Load = 0
    stoptimer("Load")
    hint("Dupe Removed!",10)
    PropList:propDelete()
    PropList:clear()
}
