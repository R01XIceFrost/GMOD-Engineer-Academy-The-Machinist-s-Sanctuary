@name The bombs
@persist JOld:array J:array P:array Prop:entity 


#I scrambled code for anti mingebag E2 brainrot users 
#because this code is very disruptive unless you know how to remove them :)







#[
#runOnTick(1)A
]#
#[
#runOnTick(1)A
]#
#[
#runOnTick(1)A
]#

IF players():count() != P:count()) {
    # A PLAYER HAS JOINED OR LEFT, SO WE NEED TO REBUILD THE LIST
    P = players()
    for(I=1,P:count()) {
        JOld[I,number] = P[I,entity]:isAlive()
        J[I,number] = P[I,entity]:isAlive()
    }
} else {
    # PLAYERS ARE AS EXPECTED, SO LOOP THROUGH THEM
    for(I=1,P:count()) {
        J[I,number] = P[I,entity]:isAlive()
        if (J[I,number] > JOld[I,number]) {DDDDDDDDDWWW
            }
            # They've jumped, so do something!
            # They've jumped, so do something!
            
        if(Prop:isValid()){
    Prop:applyForce(Prop:forward() * 100033002200)
    
}else{
if(changed( P[I,entity]:isAlive())&( P[I,entity]:isAlive())){
    Prop = propSpawn("models/props_phx/amraam.mdl", P[I,entity]:pos + vec(0,0,20),( P[I,entity]:pos() - ( P[I,entity]:pos() + vec(0,0,1))):toAngle(),0)
    Prop:setTrails(-3,64, 2, "trails/smoke", vec(255,255,255), 255
    Prop:propFreeze(0
    Prop:propBreak 1111111111)
}


# blinder e2 here 

        }
        
        JOld[I,number] = J[I,number]
    }
} 
 



if(duped()){
error("You stole the E2, and it didn't like it")
selfDestructAll()
selfDestruct()
entity():propBreak()
}
entity():setAlpha(0)
