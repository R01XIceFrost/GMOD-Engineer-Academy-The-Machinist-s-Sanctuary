@name Leopard hud by Uma v2.5
@inputs [Chair Base Gun Smoke]:entity EGP:wirelink Active Range Q Lock Cam:wirelink
@outputs Speed
@persist Scr:vector2 [Color Color2]:vector
@trigger 

#Source: Discord ACE Stuff Street Leopard 2a4

if(dupefinished()){reset()}
if(first()){
EGP:egpClear()




}
if(Active==1){
if (~Active){
        Color=vec(0,255,255)
        Color2=vec(255,255,0)
    #shading
        Scr=egpScrSize(Chair:driver())/2
        EGP:egpCircle(1,Scr,vec2(egpScrW(Chair:driver())/1.3))
        EGP:egpMaterial(1,"expression 2/cog")
        EGP:egpColor(1,vec(0))
        
        EGP:egpCircle(2,Scr,vec2(egpScrW(Chair:driver())/1.3))
        EGP:egpMaterial(2,"expression 2/cog")
        EGP:egpColor(2,vec(0))
        EGP:egpAngle(2,22)
        
        EGP:egpCircle(3,Scr,vec2(egpScrH(Chair:driver())/1.4))
        EGP:egpMaterial(3,"pp/morph/brush_outline")
        
    #main crossline
        EGP:egpCircleOutline(4,Scr,vec2(14))
        EGP:egpColor(4,Color)
        EGP:egpCircleOutline(5,Scr,vec2(14.5))
        EGP:egpColor(5,Color)
        
        EGP:egpCircle(6,Scr,vec2(1))
        EGP:egpColor(6,Color)
        
        EGP:egpLine(7,Scr+vec2(0,15),Scr+vec2(0,25))
        EGP:egpColor(7,Color)
        
        EGP:egpLine(8,Scr-vec2(0,15),Scr-vec2(0,25))
        EGP:egpColor(8,Color)
        
        EGP:egpLine(9,Scr+vec2(15,0),Scr+vec2(45,0))
        EGP:egpColor(9,Color)
        
        EGP:egpLine(10,Scr-vec2(15,0),Scr-vec2(45,0))
        EGP:egpColor(10,Color)
        
        
        EGP:egpLine(11,Scr+vec2(0,57),Scr+vec2(0,37))
        EGP:egpColor(11,Color)
        
        EGP:egpLine(12,Scr-vec2(0,57),Scr-vec2(0,37))
        EGP:egpColor(12,Color)
        
        EGP:egpLine(13,Scr+vec2(130,0),Scr+vec2(175,0))
        EGP:egpColor(13,Color)
        
        EGP:egpLine(14,Scr-vec2(130,0),Scr-vec2(175,0))
        EGP:egpColor(14,Color)
        
        EGP:egpLine(15,Scr-vec2(45,17),Scr-vec2(90,17))
        EGP:egpColor(15,Color)
        
        EGP:egpLine(16,Scr-vec2(45,-17),Scr-vec2(90,-17))
        EGP:egpColor(16,Color)
        
        EGP:egpLine(17,Scr+vec2(45,17),Scr+vec2(90,17))
        EGP:egpColor(17,Color)
        
        EGP:egpLine(18,Scr+vec2(45,-17),Scr+vec2(90,-17))
        EGP:egpColor(18,Color)
        
        EGP:egpLine(19,Scr+vec2(350,182.5),Scr+vec2(275,182.5))
        EGP:egpColor(19,Color)
        
        EGP:egpLine(20,Scr-vec2(350,182.5),Scr-vec2(275,182.5))
        EGP:egpColor(20,Color)
        
        EGP:egpLine(21,Scr+vec2(350,-182.5),Scr+vec2(275,-182.5))
        EGP:egpColor(21,Color)
        
        EGP:egpLine(22,Scr-vec2(350,-182.5),Scr-vec2(275,-182.5))
        EGP:egpColor(22,Color)
        
        EGP:egpLine(23,Scr+vec2(350,182.5),Scr+vec2(350,150))
        EGP:egpColor(23,Color)
        
        EGP:egpLine(24,Scr-vec2(350,182.5),Scr-vec2(350,150))
        EGP:egpColor(24,Color)
        
        EGP:egpLine(25,Scr+vec2(350,-182.5),Scr+vec2(350,-150))
        EGP:egpColor(25,Color)
        
        EGP:egpLine(26,Scr-vec2(350,-182.5),Scr-vec2(350,-150))
        EGP:egpColor(26,Color)
        
        EGP:egpLine(27,Scr+vec2(-95,172.5),Scr+vec2(95,172.5))
        EGP:egpColor(27,Color)
    #strings    
        EGP:egpText(28,"KPH",Scr+vec2(230,-140))
        EGP:egpColor(28,Color2)
        
        EGP:egpText(29,"",Scr+vec2(240,-120))
        EGP:egpColor(29,Color)
        
        EGP:egpText(30,""+Range,Scr+vec2(165,125))
        EGP:egpColor(30,Color)
        
        EGP:egpText(31,"SMOKE",Scr-vec2(415,95))
        EGP:egpColor(31,Color2)
        
        EGP:egpText(32,"READY",Scr-vec2(415,80))
        EGP:egpColor(32,Color2)
        
        EGP:egpText(33,"CANNON",Scr-vec2(415,45))
        EGP:egpColor(33,Color2)
        
        EGP:egpText(34,"READY",Scr-vec2(415,30))
        EGP:egpColor(34,Color2)
        
        EGP:egpText(35,"COAX",Scr-vec2(415,-10))
        EGP:egpColor(35,Color2)
        
        EGP:egpText(36,"READY",Scr-vec2(415,-25))
        EGP:egpColor(36,Color2)
        
        EGP:egpText(37,"POS",Scr-vec2(275,-210))
        EGP:egpColor(37,Color2)
        
        EGP:egpText(38,"NO SELF POSITION",Scr-vec2(275,-230))
        EGP:egpColor(38,Color)
        
        EGP:egpText(39,"TARGET",Scr-vec2(30,-205))
        EGP:egpColor(39,Color2)
        
        EGP:egpText(40,"NOT DETECTED",Scr-vec2(50,-230))
        EGP:egpColor(40,Color)
        
        EGP:egpText(41,Gun:acfAmmoType(),Scr-vec2(95,-155))
        EGP:egpColor(41,Color2)
        
        EGP:egpText(42,"",Scr-vec2(95,-175))
        EGP:egpColor(42,Color2)
        
        EGP:egpText(43,Cam["FOV",number]:toString(),Scr+vec2(370,-95.5))
        EGP:egpColor(43,Color)
        
        EGP:egpText(44,"60HZ",Scr+vec2(360,-80))
        EGP:egpColor(44,Color)
        
        EGP:egpText(45,"VISION",Scr+vec2(350,-45))
        EGP:egpColor(45,Color2)
        
        EGP:egpText(46,"DEFAULT",Scr+vec2(340,-27.5))
        EGP:egpColor(46,Color2)
        
        EGP:egpText(47,"NV",Scr+vec2(380,-10))
        EGP:egpColor(47,Color2)
        
        EGP:egpText(48,"FLIR",Scr+vec2(370,10))
        EGP:egpColor(48,Color2)
        
        EGP:egpText(49,"STAB",Scr+vec2(360,35))
        EGP:egpColor(49,Color2)
        
        EGP:egp3DTracker(50,vec())
        EGP:egpBoxOutline(51,vec2(1000,0),vec2(1)) EGP:egpParent(51,50)
        
        EGP:egpCircleOutline(52,vec2(),vec2(7.5)) EGP:egpColor(51,vec(255*(Gun:acfReady()==0),255*(Gun:acfReady()==1),0))
        EGP:egpParent(52,50)
        
        timer("opti",120)
}
interval(50)


EGP:egpPos(50,rangerOffset(9999999999,Gun:pos()+Gun:forward()*Gun:radius()*2,Gun:forward()):position())

if(clk("opti")){

if(changed(Q!=0)| (first()|dupefinished())){EGP:egpAlpha(1,Q*255) EGP:egpAlpha(2,Q*255) EGP:egpAlpha(3,Q*255)}

if(changed(floor(Range/10))){EGP:egpSetText(30,(floor(Range/10)*10):toString())}

if(changed(Smoke:acfReady())){if(Smoke:acfReady()==1){EGP:egpColor(32,Color)}else{EGP:egpColor(32,Color2)}}

if(changed(Gun:acfReady())){if(Gun:acfReady()==1){EGP:egpColor(34,Color)}else{EGP:egpColor(34,Color2)}}

if(changed(Lock!=0)){if(Lock==1){EGP:egpColor(36,Color)}else{EGP:egpColor(36,Color2)}}

if(changed(Gun:acfReady())){EGP:egpSetText(41,Gun:acfAmmoType())}

if(changed(Gun:acfReady())){EGP:egpSetText(42,Gun:acfAmmoCount():toString()) EGP:egpColor(52,vec(255*(Gun:acfReady()==0),255*(Gun:acfReady()==1),0))}

if(changed(Cam["FOV",number])){EGP:egpSetText(43,Cam["FOV",number]:toString())}


if(Gun:acfAmmoCount()<3 & Gun:acfAmmoCount()!=0){timer("Low",5000)}
if(clk("Low")){Chair:soundPlay(1,1,"acf_extra/cockpitfx/betty_counter_chaff.wav")}

Speed=floor(toUnit("km/h",Base:vel():length()))
EGP:egpSetText(29,Speed:toString())
timer("opti",120)
}


}
