@name Reds holo scaler doodad
@outputs Scale:vector
@persist Chat:string Model:string

#[

INFO:

This is a holo scaler, it's a lot more useful than like scaling 1 holo part by adjusting the code, 
instead you just use numpad to scale the holo, and E+numpad to scale it faster. 
R outputs to chat the size and prop, so you can copy it into your code.

]#

interval(25)
if(first() | dupefinished())
    {
        print("Red's holo scaler ready, "+owner():name()+"!")
        print("To start, type \"prop [nameofyourprop]\"")
        print("Then use numpad & [USE] to scale.  When done, hit [RELOAD]!")
        Scale = vec(1,1,1)
        holoCreate(1,entity():pos(),Scale)
        holoParent(1,entity())
        holoAng(1,entity():angles())
    }

#Setting holo model

runOnChat(1)
Chat = lastSaid()
if(chatClk(owner()) & changed(Chat))
    {
        SpokenArray = Chat:explode(" ")
        if(SpokenArray:string(1):lower() == "prop")
            {
                Model = SpokenArray:string(2)
                holoModel(1,Model)
            }
    }

#User rescaling
Mod = 0.025 + (owner():keyUse() * 0.0975)

if(owner():keyPressed("PAD_8"))
    {
        Scale = Scale + vec(0,0,Mod)
    }        
elseif(owner():keyPressed("PAD_2"))
    {
        Scale = Scale + vec(0,0,-Mod)
    }

if(owner():keyPressed("PAD_6"))
    {
        Scale = Scale + vec(0,Mod,0)
    }    
elseif(owner():keyPressed("PAD_4"))
    {
        Scale = Scale + vec(0,-Mod,0)
    }
    
if(owner():keyPressed("PAD_PLUS"))
    {
        Scale = Scale + vec(Mod,0,0)
    }    
elseif(owner():keyPressed("PAD_MINUS"))
    {
        Scale = Scale + vec(-Mod,0,0)
    }

#Scale actuation        
if(changed(Scale))
    {
        holoScale(1,Scale)
    }

#outputs the entire thing
if(owner():keyReload())
    {
        print("Scale:")
        print(""+Scale)
        print("Model:")
        print("\""+Model+"\"")
        print("Thank you for using Red's holo scaler, "+owner():name()+"!")
        selfDestruct()
    }
