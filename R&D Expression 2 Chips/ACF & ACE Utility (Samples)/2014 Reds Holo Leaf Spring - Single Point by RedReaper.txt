@name Reds Holo Leaf Spring - Single Point
@inputs E:entity
@persist I Scale:vector Low High Scalefix LowScale HighScale Offset
@trigger none
#@model models/sprops/misc/fittings/cred_12_9_short.mdl

#[

INFO:

Leaf spring. 
This creates a single fixed leaf spring. 
It rescales appropriately, and moves to be "between" the chip & the end point, so it appears as if it is a fixed leaf spring. 
This will support sprops leaf models of around leaf_36 to leaf_48, and KINDA works below it, it's not supported on tiny springs. 
Great for like old cars, or 4x4s. The leaf spring doesn't twist, or move backwards. This is intentional, as with the coil spring, to make it behave more realistically in use. 
It also imposes limits on how far it "moves" relative to its own size, 
so you don't get weirdly thick springs at moments
-- it'll instead appear as if your axle is no longer on its spring.


]#
interval(25)


if(dupefinished()) {reset()}
elseif(first())
    {
        Offset = 6 #how much extra downwards it goes from E, defaults to like 2
        Size = 0.8
        Width = 0.7
        Model = "models/sprops/trans/misc/leaf_48.mdl"
        #Ignore everything below here
        Scale = vec(Size,Width,Size)
        holoCreate(1,entity():pos())
        holoModel(1,Model)
        holoParent(1,entity())
        holoScale(1,Scale)
        holoAng(1,entity():angles())
        Scalefix = 0.25
        Low = Scale:z() * 0.1
        High = Scale:z() * 2.5
        LowScale = -(High*11)
        HighScale = -(High*5)
    }

Endpoint = E:massCenter() - (entity():up() * Offset)
holoPos(1,(entity():pos() + entity():toWorld(vec(0,0,clamp(entity():toLocal(Endpoint):z()*1.5,LowScale,HighScale))))/2)
if(I>=3)
    {
        Dif = entity():toLocal((entity():pos() + entity():toWorld(vec(0,0,entity():toLocal(Endpoint):z())))/2):length()
        holoScale(1,Scale:setZ(clamp(Dif * Scalefix,Low,High)))
        I = 0
    }
else {I++}
